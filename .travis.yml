# The os: directive should work to set the proper operating system, but it
# appears this is a beta feature only on some accounts?
#
# To get around that for now, we tell a little white lie about what language
# we are using, which forces travis-ci to use a OSX box.
os: osx
language: objective-c

# Travis CI does a lot to get their OSX image all nice and ready to go.
#
# That's great, but not so great for testing our own bootstrapping script.
#
# So let's do a few things to *undo* that, in order to make sure our script will
# work on a semi virgin setup.
before_install:
  # uninstall rvm
  - yes "yes" | rvm implode

  # uninstall homebrew
  # based on: https://gist.github.com/mxcl/1173223
  # slight modifications (deletes with impudence)
  - cd `brew --prefix`
  - git checkout master
  - git ls-files -z | pbcopy
  - rm -rf Cellar
  - bin/brew prune
  - pbpaste | xargs -0 rm
  - rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions
  - rm -rf bin library share/man/man1 2> /dev/null
  - rm -rf .git
  - rm -rf ~/Library/Caches/Homebrew
  - rm -rf ~/Library/Logs/Homebrew
  - rm -rf /Library/Caches/Homebrew

  # TODO: it would be great if we could uninstall the XCode Dev Tools and CLI
  # dev tools to ensure at least the CLI version gets reinstalled, but I think
  # that the automated ways to install it still require the user to click a
  # button on a popup, so might not work here.  Figure this out.
  - ls -lh /var/db/receipts

# Use environment vars to override default bootslap repo location, otherwise
# bootslap.sh is going to guess based on a username of "travis."
#
# We could also change that username for travis but let's not, that way we can
# make sure our scripts don't rely on hard coded usernames anywhere.)
env: BOOTSLAP_REPO=https://github.com/ghedamat/bootslap.git

install:
  - curl -sL https://raw.githubusercontent.com/ghedamat/bootslap/master/bootslap.sh > /tmp/bootslap

script:
  - yes | bash /tmp/bootslap
